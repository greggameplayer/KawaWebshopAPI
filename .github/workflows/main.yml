name: Application CI
on: [push]
jobs:
  pipeline:
    name: KawaWebshopAPI pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Snyk CLI
        run: |
          curl -Lo ./snyk $(curl -s https://api.github.com/repositories/45247496/releases/latest | grep "browser_download_url.*snyk-linux" | grep -vE "browser_download_url.*snyk-linux-arm64|browser_download_url.*snyk-linux*.sha256" | cut -d ':' -f 2,3 | tr -d \" | tr -d ' ')
          chmod +x snyk
          chmod +x mvnw
      - name: Snyk test
        continue-on-error: true
        run: ./snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Snyk monitor
        continue-on-error: true
        run: ./snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Run backend test
        run: |
          chmod +x mvnw
          npm run ci:backend:test
      - name: Analyze code with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ ! -z "$SONAR_TOKEN" ]; then
              ./mvnw -ntp initialize sonar:sonar -Dsonar.host.url=https://sonarqube.gregsvc.fr
          else
              echo No SONAR_TOKEN, skipping...
          fi
      - name: Package application
        run: npm run java:jar:prod
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=registry.gregsvc.fr/kawa-vendor-api:${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
      - name: Emit Tekton notification to deploy to production
        uses: wei/curl@v1.1.1
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          TEKTON_WEBHOOK: ${{ secrets.TEKTON_WEBHOOK }}
        with:
          args: "--location --request POST '$TEKTON_WEBHOOK' --header 'CF-Access-Client-Id: $CF_ACCESS_CLIENT_ID' --header 'CF-Access-Client-Secret: $CF_ACCESS_CLIENT_SECRET' --header 'Content-Type: application/json' --data-raw '{ \"version-tag\": \"${DOCKER_TAG}\", \"repo-revision\": \"main\" }'"
